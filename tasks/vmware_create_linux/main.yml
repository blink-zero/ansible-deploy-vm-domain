---
- name: Creating Linux Virtual Machine/s
  vmware_guest:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ vcenter_validate_certs }}"
    datacenter: "{{ vcenter_datacenter }}"
    name: "{{ guest_hostname }}"
    folder: "{{ vm_folder }}"
    state: "{{ vm_state }}"
    guest_id: "{{ vm_guestid }}"
    esxi_hostname: "{{ esxi_host }}"
    template: "{{ template_name }}"
    disk:
      - size_gb: "{{ lin_disk_size }}"
        type: thin
        datastore: "{{ vm_disk_datastore }}"
    hardware:
      memory_mb: "{{ guest_vram }}"
      num_cpus: "{{ guest_vcpu }}"
      scsi: "{{ vm_hw_scsi }}"
    networks:
      - name: "{{ vm_net_name }}"
        ip: "{{ inventory_hostname }}"
        netmask: "{{ netmask }}"
        gateway: "{{ gateway }}"
    customization:
      domain: "{{ ad_domain }}"
      dns_servers:
        - "{{ dns1 }}"
        - "{{ dns2 }}"
      dns_suffix:
        - "{{ ad_domain }}"
    wait_for_ip_address: True
  delegate_to: localhost

  # Connect via ssh / inventory host in memory
  
- name: Add host to Ansible inventory
  ansible.builtin.add_host:
    hostname: '{{ inventory_hostname }}'
    ansible_user: '{{ lin_username }}'
    ansible_password: '{{ lin_password }}'
    # always trust, don't store keys
    ansible_ssh_extra_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'

- name: Wait for system to become reachable over SSH
  wait_for_connection:
    timeout: 900
  delegate_to: '{{ inventory_hostname }}'

  # Join Domain (CentOS 7)

- name: CentOS - Install the epel-release - For python-pip
  yum:
    name: epel-release
    state: present
  become: yes
  when: inventory_template_name.find("centos") != -1
  delegate_to: '{{ inventory_hostname }}'

- name: CentOS - Install the required packages
  yum:
    name: realmd,sssd,oddjob,oddjob-mkhomedir,adcli,samba-common,samba-common-tools,ntpdate,ntp,python-pip
    state: present
  become: yes
  when: inventory_template_name.find("centos") != -1
  delegate_to: '{{ inventory_hostname }}'

- name: CentOS - Restart realmd
  service:
    name: realmd
    state: restarted
  become: yes
  when: inventory_template_name.find("centos") != -1
  delegate_to: '{{ inventory_hostname }}'

- name: CentOS - Install pexpect using pip
  pip:
    name: pexpect
  become: yes
  when: inventory_template_name.find("centos") != -1
  delegate_to: '{{ inventory_hostname }}'

- name: CentOS - Join system to AD
  expect:
    command: /bin/bash -c "/usr/sbin/realm join --user={{ domain_join_username }}@{{ ad_domain }} --computer-ou={{ ad_centos_ou_membership }} {{ ad_domain }}
    responses:
      Password for *: "{{ domain_join_password }}"
  become: yes
  when: inventory_template_name.find("centos") != -1
  delegate_to: '{{ inventory_hostname }}'

- name: CentOS - Add default_domain_suffix to sssd.conf
  lineinfile:
    dest: /etc/sssd/sssd.conf
    line: 'default_domain_suffix = {{ ad_domain }}'
    insertafter: '^\[sssd\]'
  become: yes
  when: inventory_template_name.find("centos") != -1
  delegate_to: '{{ inventory_hostname }}'

- name: CentOS - Restart sssd
  service:
    name: sssd
    state: restarted
  become: yes
  when: inventory_template_name.find("centos") != -1
  delegate_to: '{{ inventory_hostname }}'

- name: CentOS - Allow all users to logon to the system
  command: /bin/bash -c "/usr/sbin/realm permit --all"
  when: inventory_template_name.find("centos") != -1
  become: yes
  delegate_to: '{{ inventory_hostname }}'

- name: CentOS - Add the Domain Admins AD Group to sudoers file
  lineinfile:
    dest: /etc/sudoers
    line: '%domain\ admins@{{ ad_domain }}        ALL=(ALL)       ALL'
    insertafter: '^%wheel'
  become: yes
  when: inventory_template_name.find("centos") != -1
  delegate_to: '{{ inventory_hostname }}'

  # Join Domain (Ubuntu 18.04, 20.04, 22.04)

- name: Ubuntu 18.04 - Install the required packages
  apt:
    name: realmd,sssd,adcli,krb5-user,sssd-tools,samba-common,packagekit,samba-common-bin,samba-libs,ntpdate,ntp,python-pip
    state: present
  become: true
  when: inventory_template_name.find("ubuntu-18.04") != -1
  delegate_to: '{{ inventory_hostname }}'

- name: Ubuntu 20.04 - Install the required packages
  apt:
    name: realmd,sssd,adcli,krb5-user,sssd-tools,samba-common,packagekit,samba-common-bin,samba-libs,ntpdate,ntp,python3-pip
    state: present
  become: true
  when: inventory_template_name.find("ubuntu-20.04") != -1
  delegate_to: '{{ inventory_hostname }}'

- name: Ubuntu 22.04 - Install the required packages
  apt:
    name: realmd,sssd,adcli,krb5-user,sssd-tools,samba-common,packagekit,samba-common-bin,samba-libs,ntpdate,ntp,python3-pip
    state: present
  become: true
  when: inventory_template_name.find("ubuntu-22.04") != -1
  delegate_to: '{{ inventory_hostname }}'

- name: Ubuntu - Install pexpect using pip
  pip:
    name: pexpect
  become: true
  when: inventory_template_name.find("ubuntu") != -1
  delegate_to: '{{ inventory_hostname }}'

- name: Ubuntu - Copy realmd.conf
  template: 
    src: realmd.conf.j2
    dest: /etc/realmd.conf
    owner: root
    group: root
    mode: 0644
  become: true
  when: inventory_template_name.find("ubuntu") != -1
  delegate_to: '{{ inventory_hostname }}'

- name: Ubuntu - Copy krb5.conf
  template: 
    src: krb5.conf.j2
    dest: /etc/krb5.conf
    backup: yes
    owner: root
    group: root
    mode: 0644
  become: true
  when: inventory_template_name.find("ubuntu") != -1
  delegate_to: '{{ inventory_hostname }}'

- name: Ubuntu - Discover realm
  command: /bin/bash -c "/usr/sbin/realm discover {{ ad_domain }}"
  register: realm_discover_results
  become: true
  when: inventory_template_name.find("ubuntu") != -1
  delegate_to: '{{ inventory_hostname }}'

- name: Ubuntu - Create kerberos ticket
  expect:
    command: /bin/bash -c "/usr/bin/kinit -V {{ domain_join_username }}"
    responses:
      (?i)Password: "{{ ad_new_domain_admin_password }}"
  become: true
  when: inventory_template_name.find("ubuntu") != -1
  delegate_to: '{{ inventory_hostname }}'

- name: Ubuntu - Join system to AD
  expect:
    command: /bin/bash -c "/usr/sbin/realm join {{ ad_domain }} --computer-ou='{{ ad_ubu_ou_membership }}' --user={{ domain_join_username }}"
    responses:
      (?i)Password: "{{ domain_join_password }}"  
  ignore_errors: yes
  become: true
  when: inventory_template_name.find("ubuntu") != -1
  delegate_to: '{{ inventory_hostname }}'

- name: Ubuntu - Add domain admins group to sudoers
  lineinfile: dest=/etc/sudoers state=present line='%domain\ admins ALL=(ALL:ALL) ALL' regexp='^%domain'
  become: true
  when: inventory_template_name.find("ubuntu") != -1
  delegate_to: '{{ inventory_hostname }}'

- name: Ubuntu - Copy sssd.conf
  template:
    src: sssd.conf.j2
    dest: /etc/sssd/sssd.conf
    owner: root
    group: root
    mode: 0600
  become: true
  when: inventory_template_name.find("ubuntu") != -1
  delegate_to: '{{ inventory_hostname }}'

- name: Ubuntu - Copy pam common-session
  template: 
    src: common-session.j2
    dest: /etc/pam.d/common-session
    owner: root
    group: root
    mode: 0644
  become: true
  when: inventory_template_name.find("ubuntu") != -1
  delegate_to: '{{ inventory_hostname }}'


- name: Ubuntu - Restart realmd
  service:
    name: realmd
    state: restarted
  become: true
  when: inventory_template_name.find("ubuntu") != -1
  delegate_to: '{{ inventory_hostname }}'

- name: Ubuntu - Restart sssd
  service:
    name: sssd
    state: restarted
  become: true
  when: inventory_template_name.find("ubuntu") != -1
  delegate_to: '{{ inventory_hostname }}'


